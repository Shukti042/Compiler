Line no 1: TOKEN <INT> Lexeme int found
Line no 1: TOKEN <ID> Lexeme main found
Scope Table: 1
3--> <main , ID> 

Line no 1: TOKEN <LPAREN> Lexeme ( found
Scope Table: 1
3--> <main , ID>  <( , LPAREN> 

Line no 1: TOKEN <RPAREN> Lexeme ) found
Scope Table: 1
1--> <) , RPAREN> 
3--> <main , ID>  <( , LPAREN> 

Line no 1: TOKEN <LCURL> Lexeme { found
Scope Table: 1
1--> <) , RPAREN> 
3--> <main , ID>  <( , LPAREN> 
9--> <{ , LCURL> 

Line no 2: TOKEN <INT> Lexeme int found
Line no 2: TOKEN <ID> Lexeme a found
Scope Table: 1
1--> <) , RPAREN> 
3--> <main , ID>  <( , LPAREN> 
5--> <a , ID> 
9--> <{ , LCURL> 

Line no 2: TOKEN <COMMA> Lexeme , found
Scope Table: 1
1--> <) , RPAREN> 
3--> <main , ID>  <( , LPAREN> 
5--> <a , ID> 
7--> <, , COMMA> 
9--> <{ , LCURL> 

Line no 2: TOKEN <ID> Lexeme b found
Scope Table: 1
1--> <) , RPAREN> 
3--> <main , ID>  <( , LPAREN> 
5--> <a , ID> 
7--> <, , COMMA>  <b , ID> 
9--> <{ , LCURL> 

Line no 2: TOKEN <SEMICOLON> Lexeme ; found
Scope Table: 1
1--> <) , RPAREN> 
2--> <; , SEMICOLON> 
3--> <main , ID>  <( , LPAREN> 
5--> <a , ID> 
7--> <, , COMMA>  <b , ID> 
9--> <{ , LCURL> 

Line no 3: TOKEN <ID> Lexeme a found
Line no 3: TOKEN <ASSIGNOP> Lexeme = found
Scope Table: 1
1--> <) , RPAREN> 
2--> <; , SEMICOLON> 
3--> <main , ID>  <( , LPAREN> 
5--> <a , ID> 
7--> <, , COMMA>  <b , ID> 
9--> <{ , LCURL>  <= , ASSIGNOP> 

Line no 3: TOKEN <ID> Lexeme a found
Line no 3: TOKEN <ADDOP> Lexeme + found
Scope Table: 1
0--> <+ , ADDOP> 
1--> <) , RPAREN> 
2--> <; , SEMICOLON> 
3--> <main , ID>  <( , LPAREN> 
5--> <a , ID> 
7--> <, , COMMA>  <b , ID> 
9--> <{ , LCURL>  <= , ASSIGNOP> 

Line no 3: TOKEN <CONST_INT> Lexeme 1 found
Scope Table: 1
0--> <+ , ADDOP> 
1--> <) , RPAREN>  <1 , CONST_INT> 
2--> <; , SEMICOLON> 
3--> <main , ID>  <( , LPAREN> 
5--> <a , ID> 
7--> <, , COMMA>  <b , ID> 
9--> <{ , LCURL>  <= , ASSIGNOP> 

Line no 3: TOKEN <SEMICOLON> Lexeme ; found
Line no 4: TOKEN <CHAR> Lexeme char found
Line no 4: TOKEN <ID> Lexeme ch found
Scope Table: 1
0--> <+ , ADDOP> 
1--> <) , RPAREN>  <1 , CONST_INT> 
2--> <; , SEMICOLON> 
3--> <main , ID>  <( , LPAREN> 
5--> <a , ID> 
7--> <, , COMMA>  <b , ID> 
9--> <{ , LCURL>  <= , ASSIGNOP> 
10--> <ch , ID> 

Line no 4: TOKEN <ASSIGNOP> Lexeme = found
Line no 4: TOKEN <CONST_CHAR> Lexeme 'a' found
Line no 4: TOKEN <SEMICOLON> Lexeme ; found
Line no 5: TOKEN <ID> Lexeme ch found
Line no 5: TOKEN <ASSIGNOP> Lexeme = found
Line no 5: TOKEN <CONST_CHAR> Lexeme '\t' found
Scope Table: 1
0--> <+ , ADDOP> 
1--> <) , RPAREN>  <1 , CONST_INT> 
2--> <; , SEMICOLON> 
3--> <main , ID>  <( , LPAREN> 
5--> <a , ID> 
6--> <	 , CONST_CHAR> 
7--> <, , COMMA>  <b , ID> 
9--> <{ , LCURL>  <= , ASSIGNOP> 
10--> <ch , ID> 

Line no 5: TOKEN <SEMICOLON> Lexeme ; found
Line no 6: TOKEN <CHAR> Lexeme char found
Line no 6: TOKEN <ID> Lexeme c found
Scope Table: 1
0--> <+ , ADDOP> 
1--> <) , RPAREN>  <1 , CONST_INT> 
2--> <; , SEMICOLON> 
3--> <main , ID>  <( , LPAREN> 
4--> <c , ID> 
5--> <a , ID> 
6--> <	 , CONST_CHAR> 
7--> <, , COMMA>  <b , ID> 
9--> <{ , LCURL>  <= , ASSIGNOP> 
10--> <ch , ID> 

Line no 6: TOKEN <LTHIRD> Lexeme [ found
Scope Table: 1
0--> <+ , ADDOP> 
1--> <) , RPAREN>  <1 , CONST_INT> 
2--> <; , SEMICOLON> 
3--> <main , ID>  <( , LPAREN> 
4--> <c , ID> 
5--> <a , ID> 
6--> <	 , CONST_CHAR> 
7--> <, , COMMA>  <b , ID> 
9--> <{ , LCURL>  <= , ASSIGNOP> 
10--> <ch , ID>  <[ , LTHIRD> 

Line no 6: TOKEN <RTHIRD> Lexeme ] found
Scope Table: 1
0--> <+ , ADDOP> 
1--> <) , RPAREN>  <1 , CONST_INT> 
2--> <; , SEMICOLON> 
3--> <main , ID>  <( , LPAREN> 
4--> <c , ID> 
5--> <a , ID> 
6--> <	 , CONST_CHAR> 
7--> <, , COMMA>  <b , ID>  <] , RTHIRD> 
9--> <{ , LCURL>  <= , ASSIGNOP> 
10--> <ch , ID>  <[ , LTHIRD> 

Line no 6: TOKEN <ASSIGNOP> Lexeme = found
Line no 6: TOKEN <STRING> Lexeme "ab\td" found
Line no 6: TOKEN <SEMICOLON> Lexeme ; found
Line no 7: TOKEN <ID> Lexeme printf found
Scope Table: 1
0--> <+ , ADDOP> 
1--> <) , RPAREN>  <1 , CONST_INT> 
2--> <; , SEMICOLON> 
3--> <main , ID>  <( , LPAREN> 
4--> <c , ID> 
5--> <a , ID> 
6--> <	 , CONST_CHAR> 
7--> <, , COMMA>  <b , ID>  <] , RTHIRD> 
8--> <printf , ID> 
9--> <{ , LCURL>  <= , ASSIGNOP> 
10--> <ch , ID>  <[ , LTHIRD> 

Line no 7: TOKEN <LPAREN> Lexeme ( found
Line no 7: TOKEN <STRING> Lexeme "abc\
def\
ghi" found
Line no 9: TOKEN <RPAREN> Lexeme ) found
Line no 9: TOKEN <SEMICOLON> Lexeme ; found
Line no 10: TOKEN <COMMENT> Lexeme // a comment found
Line no 11: TOKEN <COMMENT> Lexeme /** another
*** comment ***/ found
Line no 13: TOKEN <RETURN> Lexeme return found
Line no 13: TOKEN <CONST_INT> Lexeme 0 found
Scope Table: 1
0--> <+ , ADDOP>  <0 , CONST_INT> 
1--> <) , RPAREN>  <1 , CONST_INT> 
2--> <; , SEMICOLON> 
3--> <main , ID>  <( , LPAREN> 
4--> <c , ID> 
5--> <a , ID> 
6--> <	 , CONST_CHAR> 
7--> <, , COMMA>  <b , ID>  <] , RTHIRD> 
8--> <printf , ID> 
9--> <{ , LCURL>  <= , ASSIGNOP> 
10--> <ch , ID>  <[ , LTHIRD> 

Line no 13: TOKEN <SEMICOLON> Lexeme ; found
Line no 14: TOKEN <RCURL> Lexeme } found
Scope Table: 1
0--> <+ , ADDOP>  <0 , CONST_INT> 
1--> <) , RPAREN>  <1 , CONST_INT> 
2--> <; , SEMICOLON> 
3--> <main , ID>  <( , LPAREN> 
4--> <c , ID>  <} , RCURL> 
5--> <a , ID> 
6--> <	 , CONST_CHAR> 
7--> <, , COMMA>  <b , ID>  <] , RTHIRD> 
8--> <printf , ID> 
9--> <{ , LCURL>  <= , ASSIGNOP> 
10--> <ch , ID>  <[ , LTHIRD> 

Scope Table: 1
0--> <+ , ADDOP>  <0 , CONST_INT> 
1--> <) , RPAREN>  <1 , CONST_INT> 
2--> <; , SEMICOLON> 
3--> <main , ID>  <( , LPAREN> 
4--> <c , ID>  <} , RCURL> 
5--> <a , ID> 
6--> <	 , CONST_CHAR> 
7--> <, , COMMA>  <b , ID>  <] , RTHIRD> 
8--> <printf , ID> 
9--> <{ , LCURL>  <= , ASSIGNOP> 
10--> <ch , ID>  <[ , LTHIRD> 

Total Lines : 14
Total Errors: 0