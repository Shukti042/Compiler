Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_declaration
    6     | func_definition

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN RPAREN SEMICOLON

    9 $@1: %empty

   10 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 compound_statement

   11 $@2: %empty

   12 func_definition: type_specifier ID LPAREN RPAREN $@2 compound_statement

   13 parameter_list: parameter_list COMMA type_specifier ID
   14               | parameter_list COMMA type_specifier
   15               | type_specifier ID
   16               | type_specifier

   17 $@3: %empty

   18 compound_statement: LCURL $@3 statements RCURL

   19 $@4: %empty

   20 compound_statement: LCURL $@4 RCURL

   21 var_declaration: type_specifier declaration_list SEMICOLON

   22 type_specifier: INT
   23               | FLOAT
   24               | VOID

   25 declaration_list: declaration_list COMMA ID
   26                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   27                 | ID
   28                 | ID LTHIRD CONST_INT RTHIRD

   29 statements: statement
   30           | statements statement

   31 statement: var_declaration
   32          | expression_statement
   33          | compound_statement
   34          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   35          | IF LPAREN expression RPAREN statement
   36          | IF LPAREN expression RPAREN statement ELSE statement
   37          | WHILE LPAREN expression RPAREN statement
   38          | PRINTLN LPAREN ID RPAREN SEMICOLON
   39          | RETURN expression SEMICOLON

   40 expression_statement: SEMICOLON
   41                     | expression SEMICOLON

   42 variable: ID
   43         | ID LTHIRD expression RTHIRD

   44 expression: logic_expression
   45           | variable ASSIGNOP logic_expression

   46 logic_expression: rel_expression
   47                 | rel_expression LOGICOP rel_expression

   48 rel_expression: simple_expression
   49               | simple_expression RELOP simple_expression

   50 simple_expression: term
   51                  | simple_expression ADDOP term

   52 term: unary_expression
   53     | term MULOP unary_expression

   54 unary_expression: ADDOP unary_expression
   55                 | NOT unary_expression
   56                 | factor

   57 factor: variable
   58       | ID LPAREN argument_list RPAREN
   59       | LPAREN expression RPAREN
   60       | CONST_INT
   61       | CONST_FLOAT
   62       | variable INCOP
   63       | variable DECOP

   64 argument_list: arguments
   65              | %empty

   66 arguments: arguments COMMA logic_expression
   67          | logic_expression


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 35 36
ELSE (259) 36
FOR (260) 34
WHILE (261) 37
ID (262) 7 8 10 12 13 15 25 26 27 28 38 42 43 58
LPAREN (263) 7 8 10 12 34 35 36 37 38 58 59
RPAREN (264) 7 8 10 12 34 35 36 37 38 58 59
SEMICOLON (265) 7 8 21 38 39 40 41
COMMA (266) 13 14 25 26 66
LCURL (267) 18 20
RCURL (268) 18 20
INT (269) 22
FLOAT (270) 23
VOID (271) 24
CONST_INT (272) 26 28 60
LTHIRD (273) 26 28 43
RTHIRD (274) 26 28 43
PRINTLN (275) 38
RETURN (276) 39
NOT (277) 55
CONST_FLOAT (278) 61
INCOP (279) 62
DECOP (280) 63
ADDOP (281) 51 54
MULOP (282) 53
ASSIGNOP (283) 45
LOGICOP (284) 47
RELOP (285) 49
LOWER_THAN_ELSE (286)


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
start (33)
    on left: 1, on right: 0
program (34)
    on left: 2 3, on right: 1 2
unit (35)
    on left: 4 5 6, on right: 2 3
func_declaration (36)
    on left: 7 8, on right: 5
func_definition (37)
    on left: 10 12, on right: 6
$@1 (38)
    on left: 9, on right: 10
$@2 (39)
    on left: 11, on right: 12
parameter_list (40)
    on left: 13 14 15 16, on right: 7 10 13 14
compound_statement (41)
    on left: 18 20, on right: 10 12 33
$@3 (42)
    on left: 17, on right: 18
$@4 (43)
    on left: 19, on right: 20
var_declaration (44)
    on left: 21, on right: 4 31
type_specifier (45)
    on left: 22 23 24, on right: 7 8 10 12 13 14 15 16 21
declaration_list (46)
    on left: 25 26 27 28, on right: 21 25 26
statements (47)
    on left: 29 30, on right: 18 30
statement (48)
    on left: 31 32 33 34 35 36 37 38 39, on right: 29 30 34 35 36 37
expression_statement (49)
    on left: 40 41, on right: 32 34
variable (50)
    on left: 42 43, on right: 45 57 62 63
expression (51)
    on left: 44 45, on right: 34 35 36 37 39 41 43 59
logic_expression (52)
    on left: 46 47, on right: 44 45 66 67
rel_expression (53)
    on left: 48 49, on right: 46 47
simple_expression (54)
    on left: 50 51, on right: 48 49 51
term (55)
    on left: 52 53, on right: 50 51 53
unary_expression (56)
    on left: 54 55 56, on right: 52 53 54 55
factor (57)
    on left: 57 58 59 60 61 62 63, on right: 56
argument_list (58)
    on left: 64 65, on right: 58
arguments (59)
    on left: 66 67, on right: 64 66


State 0

    0 $accept: . start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start             go to state 4
    program           go to state 5
    unit              go to state 6
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 1

   22 type_specifier: INT .

    $default  reduce using rule 22 (type_specifier)


State 2

   23 type_specifier: FLOAT .

    $default  reduce using rule 23 (type_specifier)


State 3

   24 type_specifier: VOID .

    $default  reduce using rule 24 (type_specifier)


State 4

    0 $accept: start . $end

    $end  shift, and go to state 11


State 5

    1 start: program .
    2 program: program . unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit              go to state 12
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 6

    3 program: unit .

    $default  reduce using rule 3 (program)


State 7

    5 unit: func_declaration .

    $default  reduce using rule 5 (unit)


State 8

    6 unit: func_definition .

    $default  reduce using rule 6 (unit)


State 9

    4 unit: var_declaration .

    $default  reduce using rule 4 (unit)


State 10

    7 func_declaration: type_specifier . ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier . ID LPAREN RPAREN SEMICOLON
   10 func_definition: type_specifier . ID LPAREN parameter_list RPAREN $@1 compound_statement
   12                | type_specifier . ID LPAREN RPAREN $@2 compound_statement
   21 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 13

    declaration_list  go to state 14


State 11

    0 $accept: start $end .

    $default  accept


State 12

    2 program: program unit .

    $default  reduce using rule 2 (program)


State 13

    7 func_declaration: type_specifier ID . LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID . LPAREN RPAREN SEMICOLON
   10 func_definition: type_specifier ID . LPAREN parameter_list RPAREN $@1 compound_statement
   12                | type_specifier ID . LPAREN RPAREN $@2 compound_statement
   27 declaration_list: ID .
   28                 | ID . LTHIRD CONST_INT RTHIRD

    LPAREN  shift, and go to state 15
    LTHIRD  shift, and go to state 16

    $default  reduce using rule 27 (declaration_list)


State 14

   21 var_declaration: type_specifier declaration_list . SEMICOLON
   25 declaration_list: declaration_list . COMMA ID
   26                 | declaration_list . COMMA ID LTHIRD CONST_INT RTHIRD

    SEMICOLON  shift, and go to state 17
    COMMA      shift, and go to state 18


State 15

    7 func_declaration: type_specifier ID LPAREN . parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN . RPAREN SEMICOLON
   10 func_definition: type_specifier ID LPAREN . parameter_list RPAREN $@1 compound_statement
   12                | type_specifier ID LPAREN . RPAREN $@2 compound_statement

    RPAREN  shift, and go to state 19
    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    VOID    shift, and go to state 3

    parameter_list  go to state 20
    type_specifier  go to state 21


State 16

   28 declaration_list: ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 22


State 17

   21 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 21 (var_declaration)


State 18

   25 declaration_list: declaration_list COMMA . ID
   26                 | declaration_list COMMA . ID LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 23


State 19

    8 func_declaration: type_specifier ID LPAREN RPAREN . SEMICOLON
   12 func_definition: type_specifier ID LPAREN RPAREN . $@2 compound_statement

    SEMICOLON  shift, and go to state 24

    $default  reduce using rule 11 ($@2)

    $@2  go to state 25


State 20

    7 func_declaration: type_specifier ID LPAREN parameter_list . RPAREN SEMICOLON
   10 func_definition: type_specifier ID LPAREN parameter_list . RPAREN $@1 compound_statement
   13 parameter_list: parameter_list . COMMA type_specifier ID
   14               | parameter_list . COMMA type_specifier

    RPAREN  shift, and go to state 26
    COMMA   shift, and go to state 27


State 21

   15 parameter_list: type_specifier . ID
   16               | type_specifier .

    ID  shift, and go to state 28

    $default  reduce using rule 16 (parameter_list)


State 22

   28 declaration_list: ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 29


State 23

   25 declaration_list: declaration_list COMMA ID .
   26                 | declaration_list COMMA ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 30

    $default  reduce using rule 25 (declaration_list)


State 24

    8 func_declaration: type_specifier ID LPAREN RPAREN SEMICOLON .

    $default  reduce using rule 8 (func_declaration)


State 25

   12 func_definition: type_specifier ID LPAREN RPAREN $@2 . compound_statement

    LCURL  shift, and go to state 31

    compound_statement  go to state 32


State 26

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN . SEMICOLON
   10 func_definition: type_specifier ID LPAREN parameter_list RPAREN . $@1 compound_statement

    SEMICOLON  shift, and go to state 33

    $default  reduce using rule 9 ($@1)

    $@1  go to state 34


State 27

   13 parameter_list: parameter_list COMMA . type_specifier ID
   14               | parameter_list COMMA . type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 35


State 28

   15 parameter_list: type_specifier ID .

    $default  reduce using rule 15 (parameter_list)


State 29

   28 declaration_list: ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 28 (declaration_list)


State 30

   26 declaration_list: declaration_list COMMA ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 36


State 31

   18 compound_statement: LCURL . $@3 statements RCURL
   20                   | LCURL . $@4 RCURL

    RCURL     reduce using rule 19 ($@4)
    $default  reduce using rule 17 ($@3)

    $@3  go to state 37
    $@4  go to state 38


State 32

   12 func_definition: type_specifier ID LPAREN RPAREN $@2 compound_statement .

    $default  reduce using rule 12 (func_definition)


State 33

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON .

    $default  reduce using rule 7 (func_declaration)


State 34

   10 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 . compound_statement

    LCURL  shift, and go to state 31

    compound_statement  go to state 39


State 35

   13 parameter_list: parameter_list COMMA type_specifier . ID
   14               | parameter_list COMMA type_specifier .

    ID  shift, and go to state 40

    $default  reduce using rule 14 (parameter_list)


State 36

   26 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 41


State 37

   18 compound_statement: LCURL $@3 . statements RCURL

    IF           shift, and go to state 42
    FOR          shift, and go to state 43
    WHILE        shift, and go to state 44
    ID           shift, and go to state 45
    LPAREN       shift, and go to state 46
    SEMICOLON    shift, and go to state 47
    LCURL        shift, and go to state 31
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    CONST_INT    shift, and go to state 48
    PRINTLN      shift, and go to state 49
    RETURN       shift, and go to state 50
    NOT          shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ADDOP        shift, and go to state 53

    compound_statement    go to state 54
    var_declaration       go to state 55
    type_specifier        go to state 56
    statements            go to state 57
    statement             go to state 58
    expression_statement  go to state 59
    variable              go to state 60
    expression            go to state 61
    logic_expression      go to state 62
    rel_expression        go to state 63
    simple_expression     go to state 64
    term                  go to state 65
    unary_expression      go to state 66
    factor                go to state 67


State 38

   20 compound_statement: LCURL $@4 . RCURL

    RCURL  shift, and go to state 68


State 39

   10 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 compound_statement .

    $default  reduce using rule 10 (func_definition)


State 40

   13 parameter_list: parameter_list COMMA type_specifier ID .

    $default  reduce using rule 13 (parameter_list)


State 41

   26 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 26 (declaration_list)


State 42

   35 statement: IF . LPAREN expression RPAREN statement
   36          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 69


State 43

   34 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 70


State 44

   37 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 71


State 45

   42 variable: ID .
   43         | ID . LTHIRD expression RTHIRD
   58 factor: ID . LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 72
    LTHIRD  shift, and go to state 73

    $default  reduce using rule 42 (variable)


State 46

   59 factor: LPAREN . expression RPAREN

    ID           shift, and go to state 45
    LPAREN       shift, and go to state 46
    CONST_INT    shift, and go to state 48
    NOT          shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ADDOP        shift, and go to state 53

    variable           go to state 60
    expression         go to state 74
    logic_expression   go to state 62
    rel_expression     go to state 63
    simple_expression  go to state 64
    term               go to state 65
    unary_expression   go to state 66
    factor             go to state 67


State 47

   40 expression_statement: SEMICOLON .

    $default  reduce using rule 40 (expression_statement)


State 48

   60 factor: CONST_INT .

    $default  reduce using rule 60 (factor)


State 49

   38 statement: PRINTLN . LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 75


State 50

   39 statement: RETURN . expression SEMICOLON

    ID           shift, and go to state 45
    LPAREN       shift, and go to state 46
    CONST_INT    shift, and go to state 48
    NOT          shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ADDOP        shift, and go to state 53

    variable           go to state 60
    expression         go to state 76
    logic_expression   go to state 62
    rel_expression     go to state 63
    simple_expression  go to state 64
    term               go to state 65
    unary_expression   go to state 66
    factor             go to state 67


State 51

   55 unary_expression: NOT . unary_expression

    ID           shift, and go to state 45
    LPAREN       shift, and go to state 46
    CONST_INT    shift, and go to state 48
    NOT          shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ADDOP        shift, and go to state 53

    variable          go to state 77
    unary_expression  go to state 78
    factor            go to state 67


State 52

   61 factor: CONST_FLOAT .

    $default  reduce using rule 61 (factor)


State 53

   54 unary_expression: ADDOP . unary_expression

    ID           shift, and go to state 45
    LPAREN       shift, and go to state 46
    CONST_INT    shift, and go to state 48
    NOT          shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ADDOP        shift, and go to state 53

    variable          go to state 77
    unary_expression  go to state 79
    factor            go to state 67


State 54

   33 statement: compound_statement .

    $default  reduce using rule 33 (statement)


State 55

   31 statement: var_declaration .

    $default  reduce using rule 31 (statement)


State 56

   21 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 80

    declaration_list  go to state 14


State 57

   18 compound_statement: LCURL $@3 statements . RCURL
   30 statements: statements . statement

    IF           shift, and go to state 42
    FOR          shift, and go to state 43
    WHILE        shift, and go to state 44
    ID           shift, and go to state 45
    LPAREN       shift, and go to state 46
    SEMICOLON    shift, and go to state 47
    LCURL        shift, and go to state 31
    RCURL        shift, and go to state 81
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    CONST_INT    shift, and go to state 48
    PRINTLN      shift, and go to state 49
    RETURN       shift, and go to state 50
    NOT          shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ADDOP        shift, and go to state 53

    compound_statement    go to state 54
    var_declaration       go to state 55
    type_specifier        go to state 56
    statement             go to state 82
    expression_statement  go to state 59
    variable              go to state 60
    expression            go to state 61
    logic_expression      go to state 62
    rel_expression        go to state 63
    simple_expression     go to state 64
    term                  go to state 65
    unary_expression      go to state 66
    factor                go to state 67


State 58

   29 statements: statement .

    $default  reduce using rule 29 (statements)


State 59

   32 statement: expression_statement .

    $default  reduce using rule 32 (statement)


State 60

   45 expression: variable . ASSIGNOP logic_expression
   57 factor: variable .
   62       | variable . INCOP
   63       | variable . DECOP

    INCOP     shift, and go to state 83
    DECOP     shift, and go to state 84
    ASSIGNOP  shift, and go to state 85

    $default  reduce using rule 57 (factor)


State 61

   41 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 86


State 62

   44 expression: logic_expression .

    $default  reduce using rule 44 (expression)


State 63

   46 logic_expression: rel_expression .
   47                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 87

    $default  reduce using rule 46 (logic_expression)


State 64

   48 rel_expression: simple_expression .
   49               | simple_expression . RELOP simple_expression
   51 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 88
    RELOP  shift, and go to state 89

    $default  reduce using rule 48 (rel_expression)


State 65

   50 simple_expression: term .
   53 term: term . MULOP unary_expression

    MULOP  shift, and go to state 90

    $default  reduce using rule 50 (simple_expression)


State 66

   52 term: unary_expression .

    $default  reduce using rule 52 (term)


State 67

   56 unary_expression: factor .

    $default  reduce using rule 56 (unary_expression)


State 68

   20 compound_statement: LCURL $@4 RCURL .

    $default  reduce using rule 20 (compound_statement)


State 69

   35 statement: IF LPAREN . expression RPAREN statement
   36          | IF LPAREN . expression RPAREN statement ELSE statement

    ID           shift, and go to state 45
    LPAREN       shift, and go to state 46
    CONST_INT    shift, and go to state 48
    NOT          shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ADDOP        shift, and go to state 53

    variable           go to state 60
    expression         go to state 91
    logic_expression   go to state 62
    rel_expression     go to state 63
    simple_expression  go to state 64
    term               go to state 65
    unary_expression   go to state 66
    factor             go to state 67


State 70

   34 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    ID           shift, and go to state 45
    LPAREN       shift, and go to state 46
    SEMICOLON    shift, and go to state 47
    CONST_INT    shift, and go to state 48
    NOT          shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ADDOP        shift, and go to state 53

    expression_statement  go to state 92
    variable              go to state 60
    expression            go to state 61
    logic_expression      go to state 62
    rel_expression        go to state 63
    simple_expression     go to state 64
    term                  go to state 65
    unary_expression      go to state 66
    factor                go to state 67


State 71

   37 statement: WHILE LPAREN . expression RPAREN statement

    ID           shift, and go to state 45
    LPAREN       shift, and go to state 46
    CONST_INT    shift, and go to state 48
    NOT          shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ADDOP        shift, and go to state 53

    variable           go to state 60
    expression         go to state 93
    logic_expression   go to state 62
    rel_expression     go to state 63
    simple_expression  go to state 64
    term               go to state 65
    unary_expression   go to state 66
    factor             go to state 67


State 72

   58 factor: ID LPAREN . argument_list RPAREN

    ID           shift, and go to state 45
    LPAREN       shift, and go to state 46
    CONST_INT    shift, and go to state 48
    NOT          shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ADDOP        shift, and go to state 53

    $default  reduce using rule 65 (argument_list)

    variable           go to state 77
    logic_expression   go to state 94
    rel_expression     go to state 63
    simple_expression  go to state 64
    term               go to state 65
    unary_expression   go to state 66
    factor             go to state 67
    argument_list      go to state 95
    arguments          go to state 96


State 73

   43 variable: ID LTHIRD . expression RTHIRD

    ID           shift, and go to state 45
    LPAREN       shift, and go to state 46
    CONST_INT    shift, and go to state 48
    NOT          shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ADDOP        shift, and go to state 53

    variable           go to state 60
    expression         go to state 97
    logic_expression   go to state 62
    rel_expression     go to state 63
    simple_expression  go to state 64
    term               go to state 65
    unary_expression   go to state 66
    factor             go to state 67


State 74

   59 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 98


State 75

   38 statement: PRINTLN LPAREN . ID RPAREN SEMICOLON

    ID  shift, and go to state 99


State 76

   39 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 100


State 77

   57 factor: variable .
   62       | variable . INCOP
   63       | variable . DECOP

    INCOP  shift, and go to state 83
    DECOP  shift, and go to state 84

    $default  reduce using rule 57 (factor)


State 78

   55 unary_expression: NOT unary_expression .

    $default  reduce using rule 55 (unary_expression)


State 79

   54 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 54 (unary_expression)


State 80

   27 declaration_list: ID .
   28                 | ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 16

    $default  reduce using rule 27 (declaration_list)


State 81

   18 compound_statement: LCURL $@3 statements RCURL .

    $default  reduce using rule 18 (compound_statement)


State 82

   30 statements: statements statement .

    $default  reduce using rule 30 (statements)


State 83

   62 factor: variable INCOP .

    $default  reduce using rule 62 (factor)


State 84

   63 factor: variable DECOP .

    $default  reduce using rule 63 (factor)


State 85

   45 expression: variable ASSIGNOP . logic_expression

    ID           shift, and go to state 45
    LPAREN       shift, and go to state 46
    CONST_INT    shift, and go to state 48
    NOT          shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ADDOP        shift, and go to state 53

    variable           go to state 77
    logic_expression   go to state 101
    rel_expression     go to state 63
    simple_expression  go to state 64
    term               go to state 65
    unary_expression   go to state 66
    factor             go to state 67


State 86

   41 expression_statement: expression SEMICOLON .

    $default  reduce using rule 41 (expression_statement)


State 87

   47 logic_expression: rel_expression LOGICOP . rel_expression

    ID           shift, and go to state 45
    LPAREN       shift, and go to state 46
    CONST_INT    shift, and go to state 48
    NOT          shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ADDOP        shift, and go to state 53

    variable           go to state 77
    rel_expression     go to state 102
    simple_expression  go to state 64
    term               go to state 65
    unary_expression   go to state 66
    factor             go to state 67


State 88

   51 simple_expression: simple_expression ADDOP . term

    ID           shift, and go to state 45
    LPAREN       shift, and go to state 46
    CONST_INT    shift, and go to state 48
    NOT          shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ADDOP        shift, and go to state 53

    variable          go to state 77
    term              go to state 103
    unary_expression  go to state 66
    factor            go to state 67


State 89

   49 rel_expression: simple_expression RELOP . simple_expression

    ID           shift, and go to state 45
    LPAREN       shift, and go to state 46
    CONST_INT    shift, and go to state 48
    NOT          shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ADDOP        shift, and go to state 53

    variable           go to state 77
    simple_expression  go to state 104
    term               go to state 65
    unary_expression   go to state 66
    factor             go to state 67


State 90

   53 term: term MULOP . unary_expression

    ID           shift, and go to state 45
    LPAREN       shift, and go to state 46
    CONST_INT    shift, and go to state 48
    NOT          shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ADDOP        shift, and go to state 53

    variable          go to state 77
    unary_expression  go to state 105
    factor            go to state 67


State 91

   35 statement: IF LPAREN expression . RPAREN statement
   36          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 106


State 92

   34 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    ID           shift, and go to state 45
    LPAREN       shift, and go to state 46
    SEMICOLON    shift, and go to state 47
    CONST_INT    shift, and go to state 48
    NOT          shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ADDOP        shift, and go to state 53

    expression_statement  go to state 107
    variable              go to state 60
    expression            go to state 61
    logic_expression      go to state 62
    rel_expression        go to state 63
    simple_expression     go to state 64
    term                  go to state 65
    unary_expression      go to state 66
    factor                go to state 67


State 93

   37 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 108


State 94

   67 arguments: logic_expression .

    $default  reduce using rule 67 (arguments)


State 95

   58 factor: ID LPAREN argument_list . RPAREN

    RPAREN  shift, and go to state 109


State 96

   64 argument_list: arguments .
   66 arguments: arguments . COMMA logic_expression

    COMMA  shift, and go to state 110

    $default  reduce using rule 64 (argument_list)


State 97

   43 variable: ID LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 111


State 98

   59 factor: LPAREN expression RPAREN .

    $default  reduce using rule 59 (factor)


State 99

   38 statement: PRINTLN LPAREN ID . RPAREN SEMICOLON

    RPAREN  shift, and go to state 112


State 100

   39 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 39 (statement)


State 101

   45 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 45 (expression)


State 102

   47 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 47 (logic_expression)


State 103

   51 simple_expression: simple_expression ADDOP term .
   53 term: term . MULOP unary_expression

    MULOP  shift, and go to state 90

    $default  reduce using rule 51 (simple_expression)


State 104

   49 rel_expression: simple_expression RELOP simple_expression .
   51 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 88

    $default  reduce using rule 49 (rel_expression)


State 105

   53 term: term MULOP unary_expression .

    $default  reduce using rule 53 (term)


State 106

   35 statement: IF LPAREN expression RPAREN . statement
   36          | IF LPAREN expression RPAREN . statement ELSE statement

    IF           shift, and go to state 42
    FOR          shift, and go to state 43
    WHILE        shift, and go to state 44
    ID           shift, and go to state 45
    LPAREN       shift, and go to state 46
    SEMICOLON    shift, and go to state 47
    LCURL        shift, and go to state 31
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    CONST_INT    shift, and go to state 48
    PRINTLN      shift, and go to state 49
    RETURN       shift, and go to state 50
    NOT          shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ADDOP        shift, and go to state 53

    compound_statement    go to state 54
    var_declaration       go to state 55
    type_specifier        go to state 56
    statement             go to state 113
    expression_statement  go to state 59
    variable              go to state 60
    expression            go to state 61
    logic_expression      go to state 62
    rel_expression        go to state 63
    simple_expression     go to state 64
    term                  go to state 65
    unary_expression      go to state 66
    factor                go to state 67


State 107

   34 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    ID           shift, and go to state 45
    LPAREN       shift, and go to state 46
    CONST_INT    shift, and go to state 48
    NOT          shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ADDOP        shift, and go to state 53

    variable           go to state 60
    expression         go to state 114
    logic_expression   go to state 62
    rel_expression     go to state 63
    simple_expression  go to state 64
    term               go to state 65
    unary_expression   go to state 66
    factor             go to state 67


State 108

   37 statement: WHILE LPAREN expression RPAREN . statement

    IF           shift, and go to state 42
    FOR          shift, and go to state 43
    WHILE        shift, and go to state 44
    ID           shift, and go to state 45
    LPAREN       shift, and go to state 46
    SEMICOLON    shift, and go to state 47
    LCURL        shift, and go to state 31
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    CONST_INT    shift, and go to state 48
    PRINTLN      shift, and go to state 49
    RETURN       shift, and go to state 50
    NOT          shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ADDOP        shift, and go to state 53

    compound_statement    go to state 54
    var_declaration       go to state 55
    type_specifier        go to state 56
    statement             go to state 115
    expression_statement  go to state 59
    variable              go to state 60
    expression            go to state 61
    logic_expression      go to state 62
    rel_expression        go to state 63
    simple_expression     go to state 64
    term                  go to state 65
    unary_expression      go to state 66
    factor                go to state 67


State 109

   58 factor: ID LPAREN argument_list RPAREN .

    $default  reduce using rule 58 (factor)


State 110

   66 arguments: arguments COMMA . logic_expression

    ID           shift, and go to state 45
    LPAREN       shift, and go to state 46
    CONST_INT    shift, and go to state 48
    NOT          shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ADDOP        shift, and go to state 53

    variable           go to state 77
    logic_expression   go to state 116
    rel_expression     go to state 63
    simple_expression  go to state 64
    term               go to state 65
    unary_expression   go to state 66
    factor             go to state 67


State 111

   43 variable: ID LTHIRD expression RTHIRD .

    $default  reduce using rule 43 (variable)


State 112

   38 statement: PRINTLN LPAREN ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 117


State 113

   35 statement: IF LPAREN expression RPAREN statement .
   36          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 118

    $default  reduce using rule 35 (statement)


State 114

   34 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 119


State 115

   37 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 37 (statement)


State 116

   66 arguments: arguments COMMA logic_expression .

    $default  reduce using rule 66 (arguments)


State 117

   38 statement: PRINTLN LPAREN ID RPAREN SEMICOLON .

    $default  reduce using rule 38 (statement)


State 118

   36 statement: IF LPAREN expression RPAREN statement ELSE . statement

    IF           shift, and go to state 42
    FOR          shift, and go to state 43
    WHILE        shift, and go to state 44
    ID           shift, and go to state 45
    LPAREN       shift, and go to state 46
    SEMICOLON    shift, and go to state 47
    LCURL        shift, and go to state 31
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    CONST_INT    shift, and go to state 48
    PRINTLN      shift, and go to state 49
    RETURN       shift, and go to state 50
    NOT          shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ADDOP        shift, and go to state 53

    compound_statement    go to state 54
    var_declaration       go to state 55
    type_specifier        go to state 56
    statement             go to state 120
    expression_statement  go to state 59
    variable              go to state 60
    expression            go to state 61
    logic_expression      go to state 62
    rel_expression        go to state 63
    simple_expression     go to state 64
    term                  go to state 65
    unary_expression      go to state 66
    factor                go to state 67


State 119

   34 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    IF           shift, and go to state 42
    FOR          shift, and go to state 43
    WHILE        shift, and go to state 44
    ID           shift, and go to state 45
    LPAREN       shift, and go to state 46
    SEMICOLON    shift, and go to state 47
    LCURL        shift, and go to state 31
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    CONST_INT    shift, and go to state 48
    PRINTLN      shift, and go to state 49
    RETURN       shift, and go to state 50
    NOT          shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ADDOP        shift, and go to state 53

    compound_statement    go to state 54
    var_declaration       go to state 55
    type_specifier        go to state 56
    statement             go to state 121
    expression_statement  go to state 59
    variable              go to state 60
    expression            go to state 61
    logic_expression      go to state 62
    rel_expression        go to state 63
    simple_expression     go to state 64
    term                  go to state 65
    unary_expression      go to state 66
    factor                go to state 67


State 120

   36 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 36 (statement)


State 121

   34 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 34 (statement)
